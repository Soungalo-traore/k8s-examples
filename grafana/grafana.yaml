---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
    component: core
spec:
  ports:
  - name: grafana
    protocol: TCP
    port: 3000
    targetPort: 3000
  selector:
    app: grafana
    component: core
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      containers:
      - image: grafana/grafana:4.4.3
        name: grafana
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 1000Mi
          requests:
            cpu: 200m
            memory: 100Mi
        env:
          # The following env variables set up basic auth with the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
          # - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          #   value: Admin
          # does not really work, because of template variables in exported dashboards:
          # - name: GF_DASHBOARDS_JSON_ENABLED
          #   value: "true"
        readinessProbe:
          httpGet:
            # https://github.com/grafana/grafana/issues/3824
            path: /api/health
            port: 3000
          periodSeconds: 3
        livenessProbe:
          httpGet:
            # https://github.com/grafana/grafana/issues/3824
            path: /api/health
            port: 3000
          initialDelaySeconds: 180
          periodSeconds: 3
        volumeMounts:
        - name: grafana-pv
          mountPath: /var/lib/grafana      
      volumes:      
      - name: grafana-pv
        persistentVolumeClaim:
          claimName: grafana
      nodeSelector:
        beta.kubernetes.io/os: linux
